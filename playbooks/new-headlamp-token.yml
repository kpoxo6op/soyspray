---
# playbooks/new-headlamp-token.yml
# Playbook to create a static ServiceAccount token for Headlamp with cluster-admin permissions
# Creates a cluster-admin ServiceAccount for Headlamp, binds cluster-admin, and provisions a permanent static ServiceAccount token via a Secret.
# Waits until the Secret's .data.token is populated and prints the token for Headlamp login.
# Revocation: delete the Secret 'headlamp-admin-token' or remove the ClusterRoleBinding.

- name: Common tasks for every playbook
  import_playbook: ../kubespray/playbooks/boilerplate.yml

- name: Create Headlamp static ServiceAccount token (uses chart's existing SA and RBAC)
  hosts: kube_control_plane[0]
  become: true
  vars:
    kubeconfig_path: /etc/kubernetes/admin.conf
    headlamp_namespace: "headlamp"
    sa_name: "headlamp"
    secret_name: "headlamp-static-token"

  tasks:
    - name: Create static token Secret for existing headlamp ServiceAccount
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: "{{ secret_name }}"
            namespace: "{{ headlamp_namespace }}"
            annotations:
              kubernetes.io/service-account.name: "{{ sa_name }}"
          type: kubernetes.io/service-account-token

    - name: Wait for token to be populated
      kubernetes.core.k8s_info:
        kubeconfig: "{{ kubeconfig_path }}"
        api_version: v1
        kind: Secret
        name: "{{ secret_name }}"
        namespace: "{{ headlamp_namespace }}"
      register: sa_secret
      until: sa_secret.resources | length > 0 and (sa_secret.resources[0].data is defined) and (sa_secret.resources[0].data.token is defined)
      retries: 40
      delay: 3

    - name: Show the token for Headlamp login
      ansible.builtin.debug:
        msg: "{{ sa_secret.resources[0].data.token | b64decode }}"
