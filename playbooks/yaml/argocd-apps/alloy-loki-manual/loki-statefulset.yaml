apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki
  namespace: monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: server
    app.kubernetes.io/part-of: observability
spec:
  serviceName: loki
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: observability
    spec:
      serviceAccountName: loki
      containers:
        - name: loki
          image: grafana/loki:3.3.2
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config.yaml
          securityContext:
            runAsUser: 10001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
          ports:
            - name: http
              containerPort: 3100
            - name: grpc
              containerPort: 9095
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
            limits:
              cpu: 1
              memory: 2Gi
          volumeMounts:
            - name: config
              mountPath: /etc/loki
            - name: storage
              mountPath: /var/loki
            - name: rules
              mountPath: /etc/loki/rules/fake
              readOnly: true
      securityContext:
        fsGroup: 10001
      volumes:
        - name: config
          configMap:
            name: loki-config
        - name: rules
          configMap:
            name: loki-rules
  volumeClaimTemplates:
    - metadata:
        name: storage
        labels:
          app.kubernetes.io/name: loki
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: longhorn
        resources:
          requests:
            # yes this is small, will get more storage later
            storage: 10Gi
